version: '3.8'

services:
  epidemic-api:
    build: .
    container_name: epidemic-prediction-api
    volumes:
      # Monte tout le répertoire du projet
      - .:/app
      # Monte spécifiquement les modèles (au cas où ils sont ailleurs)
      - ./models:/app/models
      # Logs persistants
      - ./logs:/app/logs
      # Cache pip pour accélérer les installations
      - pip-cache:/root/.cache/pip
    environment:
      - PYTHONUNBUFFERED=1
      - FLASK_APP=api.py
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      # Configuration TensorFlow
      - TF_CPP_MIN_LOG_LEVEL=2
    ports:
      # Expose l'API sur le port 5000
      - "5000:5000"
    networks:
      - epidemic-network
    tty: true
    stdin_open: true
    # Pour le développement, on garde le container actif
    command: tail -f /dev/null
    # Redémarre automatiquement si crash
    restart: unless-stopped

  # Service optionnel pour une base de données (pour logs, cache, etc.)
  redis:
    image: redis:7-alpine
    container_name: epidemic-redis
    ports:
      - "6379:6379"
    networks:
      - epidemic-network
    restart: unless-stopped

networks:
  epidemic-network:
    driver: bridge

volumes:
  pip-cache: